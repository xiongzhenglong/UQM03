version: '3.8'

services:
  # UQM Backend 应用
  uqm-backend:
    build: .
    container_name: uqm-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://uqm_user:uqm_password@postgres:5432/uqm_db
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - CACHE_BACKEND=redis
      - CORS_ORIGINS=["http://localhost:3000","http://localhost:8080"]
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - uqm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: uqm-postgres
    environment:
      - POSTGRES_DB=uqm_db
      - POSTGRES_USER=uqm_user
      - POSTGRES_PASSWORD=uqm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - uqm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uqm_user -d uqm_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: uqm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uqm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: uqm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - uqm-backend
    networks:
      - uqm-network
    restart: unless-stopped
    profiles:
      - with-nginx

  # Prometheus 监控（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: uqm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - uqm-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana 监控仪表板（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: uqm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - uqm-network
    restart: unless-stopped
    profiles:
      - monitoring

  # 测试数据库（仅用于测试）
  test-postgres:
    image: postgres:15-alpine
    container_name: uqm-test-postgres
    environment:
      - POSTGRES_DB=uqm_test_db
      - POSTGRES_USER=uqm_test_user
      - POSTGRES_PASSWORD=uqm_test_password
    ports:
      - "5433:5432"
    networks:
      - uqm-network
    profiles:
      - testing
    tmpfs:
      - /var/lib/postgresql/data

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  uqm-network:
    driver: bridge
